<!DOCTYPE html>
<html>
<head>
    <title>React SPA</title>
    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>
    <div id="root"></div>
    <script type="text/babel">

        const App = () => {
            const [items, setItems] = React.useState([]);
            const [selectedItem, setSelectedItem] = React.useState(null);

            React.useEffect(() => {
                fetch('/api/books')
                    .then(response => response.json())
                    .then(data => setItems(data))
                    .catch(err => console.error("Error loading data", err));
            }, []);

            const handleSelectItem = (item) => {
                setSelectedItem(item);
            };

            return (
                <div>
                    <h1>Book List</h1>
                    <ItemList items={items} onSelect={handleSelectItem} />
                    <Detail item={selectedItem} />
                </div>
            );
        };

        const ItemList = ({ items, onSelect }) => {
            return (
                <ul>
                    {items.map((item) => (
                        <li key={item._id} onClick={() => onSelect(item)}>
                            {item.title}
                        </li>
                    ))}
                </ul>
            );
        };

        const Detail = ({ item }) => {
            const [formData, setFormData] = React.useState(item);

            React.useEffect(() => {
                setFormData(item);  // Update form data when item changes
            }, [item]);

            const handleChange = (e) => {
                const { name, value } = e.target;
                setFormData({ ...formData, [name]: value });
            };

            const handleSave = () => {
                fetch(`/api/books/${formData._id}`, {
                    method: formData._id ? 'PUT' : 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(formData)
                })
                .then(response => response.json())
                .then(data => {
                    console.log("Save successful", data);
                });
            };

            const handleDelete = () => {
                fetch(`/api/books/${formData._id}`, { method: 'DELETE' })
                    .then(() => {
                        setFormData(null);
                        console.log("Delete successful");
                    });
            };

            if (!formData) return <div>Select an item to view details</div>;

            return (
                <div>
                    <h2>Edit {formData.title}</h2>
                    <input name="title" value={formData.title} onChange={handleChange} />
                    <input name="author" value={formData.author} onChange={handleChange} />
                    <input name="publicationdate" value={formData.publicationdate} onChange={handleChange} />
                    <input name="genre" value={formData.genre} onChange={handleChange} />
                    <button onClick={handleSave}>Save</button>
                    <button onClick={handleDelete}>Delete</button>
                </div>
            );
        };

        ReactDOM.render(<App />, document.getElementById('root'));
    </script>
</body>
</html>
